#!/bin/bash

source ../env.sh

GENERATOR=malgen.py

# These values are from the Python File malgen.py
# The default value for the data file generated by the Python code is
# events-malstone.dat.  If this is not the value you want, you can override it
# here and pass it using -o ${OUTFILE}
OUTFILE=events-malstone.dat
METAFILE=METADATA.txt

# It is probably best that this matches the list of nodes in nodes.txt.
# The confusion can arise from having IPs in one list and names in the other.
# We use hostname -i here to get the IP address.  If you have a naming
# convention for the machines, you may want to change this
HOST=`hostname -i`

# Note:
# VAL is used to ensure non-overlapping Event Ids for each record.  The size of
# the initial block is taken in account here in case you are only generating
# data on a single node for testing or debugging purposes.

# To toggle between strictly following the distribution and generatating exactly
# the specified number of records, use -t, --truncate on the line:
#    ${PYTHON} ${GENERATOR} -O ${IMPORT_FILE_DIR}/ ${VAL}
# if -t is not used, the distribution is followed.

for ((INDEX=0; INDEX < ${NUM_BLOCKS}; INDEX += 1)); do
    VAL=$((${INITIAL_BLOCK_SIZE} + $INDEX * ${BLOCK_SIZE}));
    ${PYTHON} ${GENERATOR} -O ${IMPORT_FILE_DIR}/ ${VAL}
    mv ${IMPORT_FILE_DIR}/${OUTFILE} ${IMPORT_FILE_DIR}/${DATA_FILE_BASE}-${HOST}-${INDEX}.dat;
    mv ${IMPORT_FILE_DIR}/${METAFILE} ${IMPORT_FILE_DIR}/METADATA-malstone-${HOST}-${INDEX}.txt;
done;


# Consolidate data into a single file
# We do not consolidate metadata

# cat'ing is terrible if there is only file, so this has been updated to deal
# with the single and multiple iteration cases.
cd ${IMPORT_FILE_DIR}
if [ ${NUM_BLOCKS} == 1 ]; then
    mv ${DATA_FILE_BASE}-${HOST}-0.dat ${DATA_FILE_BASE}-${HOST}.dat;
else
    cat ${DATA_FILE_BASE}-${HOST}-*.dat > ${DATA_FILE_BASE}-${HOST}.dat;
fi

# Clean up temporary files
for ((INDEX=0; INDEX < ${NUM_BLOCKS}; INDEX += 1)); do
    rm ${DATA_FILE_BASE}-${HOST}-${INDEX}.dat;
done;

exit 0

