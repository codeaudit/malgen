 Notes on the number of records which can be generated by MalGen v. 0.9


The structure of a MalGen record is:

    eventId|timestamp|siteId|flag|entityId

Release 0.8 of MalGen fixed the length of each record at 100 bytes (100 ascii
characters).  The pipes separating the fields are included in the total.

With Release 0.9, the overall length (100 bytes) stays the same, but each
field is a now a fixed-width.

This has an impact of the number of records that can be generated on a single
node.  This is described below.

The number of bytes for each field are:

    Field:   eventId  timestamp  siteId  flag  entityId
    Bytes:      31        26       19      1      19


Python Numeric Types
------ ------- -----

In Python, integers are 10 or 19 digits long, depending on the underlying C.  We
use zero-padding to make each integer field 19 characters in length.

All the fields are non-negative integers with the possible exception of the hash
component of the eventId.  Because of the potential minus sign, that component
of the eventId is 20 character digits long.

Timestamps, from calling str() on a datetime, are 19 or 26 characters long
depending on whether the milliseconds are 0.  In order to fix the width of the
field, we decided to display the milliseconds (.000000) in the 0 case.


Unique Key
------ ---

The eventId is the unique key.  The key is unique both on a node and across
multiple nodes when records are generated on multiple machines.  There are two
components to the eventId.  These will be explained after we determine how many
bytes are available.

We count backward to it to see how long it can be.

    |-------------|----------|
    |    FIELD    |  LENGTH  |
    |-------------|----------|
    | entity id   |     19   |
    |-------------|----------|
    | delim (|)   |      1   |
    |-------------|----------|
    | flag        |      1   |
    |-------------|----------|
    | delim (|)   |      1   |
    |-------------|----------|
    | site id     |     19   |
    |-------------|----------|
    | delim (|)   |      1   |
    |-------------|----------|
    | timestamp   |     26   |
    |-------------|----------|
    | delim (|)   |      1   |
    |-------------|----------|
    |-------------|----------|
    |    Total    |     69   |
    |-------------|----------|


This leaves 100 - 69 = 31 for the eventId.


Components
----------

The two components of the eventId are a sequence and a hash code.

For uniqueness across multiple nodes the right-most 20 charters of the eventId
are the zero-padded hash of the hostname.  Hashing returns a long integer that
we are taking to be 19 numeric digits long with possibly an additional character
for the negative sign.

Note:
  If the nodes you generate data on have the same hostname, i.e. localhost, then
  the records generated will not be unique across machines.  There is also a
  chance of collisions, regardless of the naming scheme, although this is
  unlikely.

Because hashing can return a negative number, the eventId is not guaranteed to
be a numeric field.  Since the sequence is prepended to the hash value, there
may be a dash about 1/3rd of the way through the field.  

    Example: 00000000000-0424822632334345288 vs. 0030000000607885111455005847089

For uniqueness on a node, an increasing sequence is used.  The hashing leaves us
31 - 20 = 11 characters.  Having 11 characters for the sequence gives us

    00000000000 , 00000000001, ... 99999999999

which is a maximum of 100 billion unique records per node which can be generated
using MalGen.

Note:
  on a machine with a 10 digit maximum integer, the sequence value gracefully
  gets converted to a long integer after 2147483647 (sys.maxint).  This allows
  us the full range of sequence numbers.


Statistical Distribution
----------- ------------

The records are generated to follow a statistical distribution.  This is
configurable but even if you are using default values, you may be unable to
generate enough records to fulfill the distribution.  For example, a
configurable parameter is Site Scale (-S).  This is the

    Scale factor determining typical number of events per site (default 10000).

If you try to generate a large number of records and this value is set extremely
low, and the Compromise Probability (-p) is also set low, then the chances of
satisfying the distribution with the maximum number of records allowed per node
decreases.


Generation Times
---------- -----

To use a baseline, we generated files with 100 and 500 million records.  The
length of time required was:

    |-----------|---------|-----------------|----------|
    | # Records |   RAM   |     Stage       | Duration |
    |-----------|---------|-----------------|----------|
    |  100 M    |  16 GB  |  Compromised    | 60 min   |
    |-----------|---------|-----------------|----------|
    |  100 M    |  4 GB   |  Uncompromised  | 54 min   |
    |-----------|---------|-----------------|----------|
    |-----------|---------|-----------------|----------|
    |  500 M    |  16 GB  |  Compromised    | 190 min  |
    |-----------|---------|-----------------|----------|
    |  500 M    |  4 GB   |  Uncompromised  | 275 min  |
    |-----------|---------|-----------------|----------|

